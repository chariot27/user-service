spring.application.name=user-service

# --- Banco (PostgreSQL) ---
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}

# --- CDN (Bunny) ---
# Base do Storage API (fixa)
bunny.storage.base-url=${CDN_URI:https://br.storage.bunnycdn.com}
# Nome do Storage Zone
bunny.storage.zone-name=${CDN_ZONE_NAME}
# AccessKey do Storage (corrigido: access-key)
bunny.storage.access-key=${CDN_ACCESS_KEY}
# Prefixo de pasta (sem chaves; com default "users")
bunny.storage.folder-prefix=${CDN_PREFIX:users}
# Hostname público da Pull Zone
bunny.cdn.base-url=${PUB_URI}
bunny.storage.fail-hard=false

# --- Rate limit simples (por IP+rota) ---
app.rate-limit.limit=120
app.rate-limit.window-millis=10000

# Rotas a proteger (pode adicionar mais)
app.rate-limit.include[0]=/api/users/login
app.rate-limit.include[1]=/api/users/register
app.rate-limit.include[2]=/api/users/perfil

# Exclusões adicionais (além das padrão já no código)
app.rate-limit.exclude[0]=/health
app.rate-limit.exclude[1]=/public/*

# Hibernate/JPA: cria/atualiza tabelas automaticamente (ok para dev/staging)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Em alguns ambientes (PostgreSQL + LOB) evita warnings/erros
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# (opcional) se você usa schema diferente de "public", descomente:
# spring.jpa.properties.hibernate.default_schema=public

# Recomenda-se desligar Open-Session-In-View
spring.jpa.open-in-view=false

# Porta do serviço
server.port=${SERVER_PORT:8081}

# Recursos estáticos (irrelevante aqui, mas OK)
spring.web.resources.add-mappings=true

# --- Logs um pouco mais verbosos no start (opcional) ---
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace

# ---- Pipeline de registro
app.registration.queue.capacity=20000
app.registration.workers.cpu=8    
app.registration.workers.db=100        
app.registration.workers.io=32
app.registration.max-retries=3
app.registration.retry-backoff-ms=200

# ---- Hikari/Neon (mantenha baixo)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=2000
spring.jpa.properties.hibernate.jdbc.batch_size=200
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# ---- Tomcat e HTTP
server.tomcat.threads.max=200
server.tomcat.accept-count=200
server.connection-timeout=2s
server.compression.enabled=true

# ---- Segurança do hash (custo CPU)
app.security.password.encoder=bcrypt                 # (ou argon2)
app.security.bcrypt.strength=9 # reduza p/ 9 em free tier


